#!/usr/bin/env python3
"""
Multilingual Local AI Assistant - Main Entry Point
A secure Python-based local AI chatbot assistant supporting multiple languages including Hindi
"""

import sys
import os
from pathlib import Path

# Add project root to path
sys.path.insert(0, str(Path(__file__).parent))

from core.config_simple import Config
from auth.manager_simple import AuthManager
from assistant_multilingual import MultilingualAssistant

def main():
    """Start the Multilingual Local AI Assistant"""
    
    # Display banner
    print("=" * 60)
    print("ü§ñ Local AI Assistant / ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø AI ‡§∏‡§π‡§æ‡§Ø‡§ï")
    print("Secure system automation under human control")
    print("‡§Æ‡§æ‡§®‡§µ ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§£ ‡§ï‡•á ‡§§‡§π‡§§ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§∏‡•ç‡§µ‡§ö‡§æ‡§≤‡§®")
    print("=" * 60)
    
    try:
        # Load or create configuration
        config = Config("config.json")
        
        # Run setup wizard if needed
        if not config.is_configured():
            print("\nRunning first-time setup... / ‡§™‡§π‡§≤‡•Ä ‡§¨‡§æ‡§∞ ‡§∏‡•á‡§ü‡§Ö‡§™ ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à...")
            setup_wizard(config)
        
        # Initialize authentication
        auth_manager = AuthManager(config)
        
        # Authenticate user
        if not auth_manager.authenticate():
            print("Authentication failed. Exiting. / Authentication ‡§Ö‡§∏‡§´‡§≤‡•§ ‡§¨‡§æ‡§π‡§∞ ‡§®‡§ø‡§ï‡§≤ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§")
            return
        
        # Initialize and start assistant
        assistant = MultilingualAssistant(config, auth_manager)
        assistant.start_chat()
        
    except KeyboardInterrupt:
        print("\nAssistant stopped by user. / Assistant ‡§ï‡•ã user ‡§®‡•á ‡§¨‡§Ç‡§¶ ‡§ï‡§ø‡§Ø‡§æ‡•§")
    except Exception as e:
        print(f"Error / ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø: {e}")
        return 1

def setup_wizard(config):
    """Simple setup wizard"""
    print("\n=== First Time Setup / ‡§™‡§π‡§≤‡•Ä ‡§¨‡§æ‡§∞ ‡§∏‡•á‡§ü‡§Ö‡§™ ===")
    print("This will create your user account and configure the assistant.")
    print("‡§Ø‡§π ‡§Ü‡§™‡§ï‡§æ user account ‡§¨‡§®‡§æ‡§è‡§ó‡§æ ‡§î‡§∞ assistant ‡§ï‡•ã configure ‡§ï‡§∞‡•á‡§ó‡§æ‡•§")
    
    # Basic setup - mark as configured
    config.mark_configured()
    print("Setup completed! You can now create your user account.")
    print("‡§∏‡•á‡§ü‡§Ö‡§™ ‡§™‡•Ç‡§∞‡§æ ‡§π‡•Å‡§Ü! ‡§Ö‡§¨ ‡§Ü‡§™ ‡§Ö‡§™‡§®‡§æ user account ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§")

if __name__ == "__main__":
    main()